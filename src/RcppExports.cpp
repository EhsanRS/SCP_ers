// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// MergeRowsForDense
arma::mat MergeRowsForDense(const arma::mat& matrix, const std::vector<std::string>& groupings);
RcppExport SEXP _SCP_MergeRowsForDense(SEXP matrixSEXP, SEXP groupingsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type matrix(matrixSEXP);
    Rcpp::traits::input_parameter< const std::vector<std::string>& >::type groupings(groupingsSEXP);
    rcpp_result_gen = Rcpp::wrap(MergeRowsForDense(matrix, groupings));
    return rcpp_result_gen;
END_RCPP
}
// MergeRowsForSparse
arma::sp_mat MergeRowsForSparse(const arma::sp_mat& matrix, const std::vector<std::string>& groupings);
RcppExport SEXP _SCP_MergeRowsForSparse(SEXP matrixSEXP, SEXP groupingsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type matrix(matrixSEXP);
    Rcpp::traits::input_parameter< const std::vector<std::string>& >::type groupings(groupingsSEXP);
    rcpp_result_gen = Rcpp::wrap(MergeRowsForSparse(matrix, groupings));
    return rcpp_result_gen;
END_RCPP
}
// MergeRowsC
SEXP MergeRowsC(const SEXP& matrix, const std::vector<std::string>& groupings);
RcppExport SEXP _SCP_MergeRowsC(SEXP matrixSEXP, SEXP groupingsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const SEXP& >::type matrix(matrixSEXP);
    Rcpp::traits::input_parameter< const std::vector<std::string>& >::type groupings(groupingsSEXP);
    rcpp_result_gen = Rcpp::wrap(MergeRowsC(matrix, groupings));
    return rcpp_result_gen;
END_RCPP
}
// asMatrixC
NumericMatrix asMatrixC(NumericVector rp, NumericVector cp, NumericVector z, int nrows, int ncols);
RcppExport SEXP _SCP_asMatrixC(SEXP rpSEXP, SEXP cpSEXP, SEXP zSEXP, SEXP nrowsSEXP, SEXP ncolsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type rp(rpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cp(cpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type nrows(nrowsSEXP);
    Rcpp::traits::input_parameter< int >::type ncols(ncolsSEXP);
    rcpp_result_gen = Rcpp::wrap(asMatrixC(rp, cp, z, nrows, ncols));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SCP_MergeRowsForDense", (DL_FUNC) &_SCP_MergeRowsForDense, 2},
    {"_SCP_MergeRowsForSparse", (DL_FUNC) &_SCP_MergeRowsForSparse, 2},
    {"_SCP_MergeRowsC", (DL_FUNC) &_SCP_MergeRowsC, 2},
    {"_SCP_asMatrixC", (DL_FUNC) &_SCP_asMatrixC, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_SCP(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
